name: CI

on: [push]

env:
  CMDSTAN_VERSION: "2.34.1"

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Cache CmdStan
        id: cache-cmdstan
        uses: actions/cache@v4
        with:
          path: "~/.cmdstan"
          key: cmdstan-${{ env.CMDSTAN_VERSION }}-${{ runner.os }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[test]
      - name: Install CmdStan
        run: |
          import cmdstanpy
          cmdstanpy.install_cmdstan(version="${{ env.CMDSTAN_VERSION }}")
        shell: python
      - name: Test with pytest
        run: python -m pytest
  workflow:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Cache CmdStan
        id: cache-cmdstan
        uses: actions/cache@v4
        with:
          path: "~/.cmdstan"
          key: cmdstan-${{ env.CMDSTAN_VERSION }}-${{ runner.os }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[test]
      - name: Install CmdStan
        run: |
          import cmdstanpy
          cmdstanpy.install_cmdstan(version="${{ env.CMDSTAN_VERSION }}")
        shell: python
      - name: Run snakemake on a reduced workflow
        run: python -m snakemake --cores 1 --configfile tests/workflow/test_config.yaml
